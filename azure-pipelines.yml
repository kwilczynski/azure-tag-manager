# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- opensource

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    shopt -s extglob
    shopt -s dotglob
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'


- script: go test -v ./...
  displayName: 'Run tests and get deps'

- script: |
    set -e -x
    APP_VERSION=$(git describe --tags | tr - ' ' | awk '// {print $2}' || echo $(Build.BuildId)) 
    echo ${APP_VERSION}
    export GOARCH=amd64
    export GOOS=darwin 
    go build -ldflags "-X main.version=${APP_VERSION}" -o $(Build.ArtifactStagingDirectory)/azure-tag-manager-${GOOS}-${GOARCH}-${APP_VERSION} cmd/cli/main.go
    export GOOS=linux 
    go build -ldflags "-X main.version=${APP_VERSION}" -o $(Build.ArtifactStagingDirectory)/azure-tag-manager-${GOOS}-${GOARCH}-${APP_VERSION} cmd/cli/main.go
    export GOOS=windows 
    go build -ldflags "-X main.version=${APP_VERSION}" -o $(Build.ArtifactStagingDirectory)/azure-tag-manager-${GOOS}-${GOARCH}-${APP_VERSION} cmd/cli/main.go
    ls -la $(Build.ArtifactStagingDirectory)
  displayName: 'Build'

- task: GitHubRelease@0
  displayName: ‘Create GitHub Release’
  inputs:
    action: 'create'
    githubConnection: tdi
    repositoryName: nordcloud/azure-tag-manager
    tagSource: 'auto'
    addChangeLog: true





  